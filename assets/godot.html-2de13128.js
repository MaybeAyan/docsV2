import{_ as n,o as s,c as a,a as t}from"./app-d5c63569.js";const e={},p=t(`<h2 id="godot" tabindex="-1"><a class="header-anchor" href="#godot" aria-hidden="true">#</a> godot</h2><h3 id="_2d-俯视角" tabindex="-1"><a class="header-anchor" href="#_2d-俯视角" aria-hidden="true">#</a> 2d 俯视角</h3><h4 id="鼠标点击移动-土豆兄弟" tabindex="-1"><a class="header-anchor" href="#鼠标点击移动-土豆兄弟" aria-hidden="true">#</a> 鼠标点击移动（土豆兄弟）</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>func <span class="token function">_process</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span><span class="token operator">:</span>
	# 获取鼠标坐标
	<span class="token keyword">var</span> mouse_pos <span class="token operator">=</span> <span class="token function">get_global_mouse_position</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> self_pos <span class="token operator">=</span> position
	
	# 动画贴图翻转实现转向
	<span class="token keyword">if</span> mouse_pos<span class="token punctuation">.</span>x <span class="token operator">&gt;=</span> position<span class="token punctuation">.</span>x <span class="token operator">:</span> 
		flip <span class="token operator">=</span> <span class="token boolean">false</span>
	<span class="token keyword">else</span><span class="token operator">:</span>
		flip <span class="token operator">=</span> <span class="token boolean">true</span>
	playerAni<span class="token punctuation">.</span>flip_h <span class="token operator">=</span> flip
	
	dir <span class="token operator">=</span> <span class="token punctuation">(</span>mouse_pos <span class="token operator">-</span> self_pos<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalized</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> canMove and <span class="token operator">!</span>stop<span class="token operator">:</span>
		velocity <span class="token operator">=</span> dir <span class="token operator">*</span> speed
		<span class="token function">move_and_slide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		
func <span class="token function">_input</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span>
	<span class="token keyword">if</span> event is <span class="token class-name">InputEventMouseButton</span> and event<span class="token punctuation">.</span>button_index <span class="token operator">==</span> <span class="token constant">MOUSE_BUTTON_LEFT</span> and event<span class="token punctuation">.</span><span class="token function">is_pressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
		canMove <span class="token operator">=</span> <span class="token boolean">false</span>
	<span class="token keyword">if</span> event is <span class="token class-name">InputEventMouseButton</span> and event<span class="token punctuation">.</span>button_index <span class="token operator">==</span> <span class="token constant">MOUSE_BUTTON_LEFT</span> and <span class="token operator">!</span>event<span class="token punctuation">.</span><span class="token function">is_pressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
		canMove <span class="token operator">=</span> <span class="token boolean">true</span>


func <span class="token function">_on_stop_mouse_entered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
	stop <span class="token operator">=</span> <span class="token boolean">true</span>


func <span class="token function">_on_stop_mouse_exited</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
	stop <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="随机生成装饰性瓦片" tabindex="-1"><a class="header-anchor" href="#随机生成装饰性瓦片" aria-hidden="true">#</a> 随机生成装饰性瓦片</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>func <span class="token function">random_title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
	# 清除图层
	tilemap<span class="token punctuation">.</span><span class="token function">clear_layer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    # 获取使用图层的所有坐标
	<span class="token keyword">var</span> bg1_cells <span class="token operator">=</span> tilemap<span class="token punctuation">.</span><span class="token function">get_used_cells</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> ran <span class="token operator">=</span> <span class="token class-name">RandomNumberGenerator</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> cell_pos in bg1_cells<span class="token operator">:</span>
		<span class="token keyword">var</span> num <span class="token operator">=</span> ran<span class="token punctuation">.</span><span class="token function">randi_range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> num <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token operator">:</span>
			tilemap<span class="token punctuation">.</span><span class="token function">set_cell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>cell_pos<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="随机生成怪物" tabindex="-1"><a class="header-anchor" href="#随机生成怪物" aria-hidden="true">#</a> 随机生成怪物</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>func <span class="token function">_on_timer_timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
	<span class="token keyword">var</span> ran <span class="token operator">=</span> <span class="token class-name">RandomNumberGenerator</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    # 限制在 tilemap 所绘图层范围内
	<span class="token keyword">var</span> num <span class="token operator">=</span> ran<span class="token punctuation">.</span><span class="token function">randi_range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>tilemap<span class="token punctuation">.</span><span class="token function">get_used_cells</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    # 转换 tilemap坐标 为全局坐标    
	<span class="token keyword">var</span> local_position <span class="token operator">=</span> tilemap<span class="token punctuation">.</span><span class="token function">map_to_local</span><span class="token punctuation">(</span>tilemap<span class="token punctuation">.</span><span class="token function">get_used_cells</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> enemyTemp <span class="token operator">=</span> enemy<span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	enemyTemp<span class="token punctuation">.</span>position <span class="token operator">=</span> local_position <span class="token operator">*</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>
	
	self<span class="token punctuation">.</span><span class="token function">add_child</span><span class="token punctuation">(</span>enemyTemp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","godot.html.vue"]]);export{r as default};
